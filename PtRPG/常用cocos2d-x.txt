1.定义一个Scene

#ifndef __GAME_SCENE_H__
#define __GAME_SCENE_H__

#include "cocos2d.h"

USING_NS_CC;

class GameScene : public CCLayer
{
public:
	// Here's a difference. Method 'init' in cocos2d-x returns bool, instead of returning 'id' in cocos2d-iphone
	virtual bool init();
	
	// there's no 'id' in cpp, so we recommand to return the exactly class pointer
	static cocos2d::CCScene* scene();
	
	// implement the "static node()" method manually
	LAYER_NODE_FUNC(GameScene);
	
private:
	
};

#endif // __GAME_SCENE_H__

#include "GameScene.h"

USING_NS_CC;

CCScene* GameScene::scene()
{
	// 'scene' is an autorelease object
	CCScene *scene = CCScene::node();
	
	// 'layer' is an autorelease object
	GameScene *layer = GameScene::node();
	
	// add layer as a child to scene
	scene->addChild(layer);
	
	// return the scene
	return scene;
}

// on "init" you need to initialize your instance
bool GameScene::init()
{
	//////////////////////////////
	// 1. super init first
	if ( !CCLayer::init() )
	{
		return false;
	}
	
	CCSize winSize = CCDirector::sharedDirector()->getWinSize();
	
	return true;
}


2. 字符串的使用(NSString)
(1)
const char * getString()
{
	CCString *pRet = new CCString();
	pRet->autorelease();

	pRet->m_sString = XXXXX;
	
	return pRet->m_sString.c_str();
}


(2)
std::string mapName;
CCLOG("[%s]",mapName.c_str());

.h中声明
std::string * m_pFontName;
构造
, m_pFontName(NULL)
希构
CC_SAFE_DELETE(m_pFontName);
赋值
CC_SAFE_DELETE(m_pFontName);
m_pFontName = new std::string(fontName);




3. 格式刷(stringWithFormat)
char pTempMap[32] = {0};
sprintf(pTempMap,"%s.tmx",mapName.c_str());


4. CCMutableArray
CCMutableArray<CCSpriteFrame*> *walkRightFrames = new CCMutableArray<CCSpriteFrame*>();


5.CCARRAY_FOREACH使用
(1)
CCArray::arrayWithCapacity(10);

CCObject    * pObject;
CCARRAY_FOREACH(_RemoteplayerArray, pObject)
{
	PtCharacter * pCharacter = (PtCharacter*)pObject;
	if(pCharacter && pCharacter->_spriteSheet->getIsVisible())
	{
		//NViewDistance * pViewDistance = (NViewDistance*)[_ViewDistanceArray objectForKey:pCharacter.ItemID];
		//pViewDistance->getPosition() = pCharacter->_characterSprite->getPosition();
	}
}

(2)
CCNode   * child;
CCArray  * pArray  = menu->getChildren();
CCObject * pObject = NULL;
CCARRAY_FOREACH(pArray, pObject)
{
	if(pObject == NULL)
		break;

	child = (CCNode*)pObject;
}


6. win32内存检测工具Visual Leak Detector , CRT

7. 相反的动作 actionBy->reverse();

8. 相同的动作第二次使用，actionTo0->copy()->autorelease()

9. 动作Sequence ： CCSequence::actions(actionBy, actionByBack, NULL)

10. 重复动作: CCRepeatForever::actionWithAction(actionUp)

11. Iterator使用
CCMutableArray<CCObject *>::CCMutableArrayIterator it;
for(it = m_paddles->begin(); it != m_paddles->end(); it++)
	{
		paddle = (Paddle*)(*it);

		if(!paddle)
			break;
	}


12. CCLayerMultiplex与switchTo使用
CCLayer* pLayer1 = new MenuLayer1();
CCLayer* pLayer2 = new MenuLayer2();
CCLayer* pLayer3 = new MenuLayer3();
CCLayer* pLayer4 = new MenuLayer4();

CCLayerMultiplex* layer = CCLayerMultiplex::layerWithLayers(pLayer1, pLayer2, pLayer3, pLayer4, NULL);
addChild(layer, 0);

((CCLayerMultiplex*)m_pParent)->switchTo(0);


13. 添加触摸
setIsTouchEnabled( true );

void Parallax2::registerWithTouchDispatcher()
{
    CCTouchDispatcher::sharedDispatcher()->addTargetedDelegate(this, 0, true);
}

bool Parallax2::ccTouchBegan(CCTouch* touch, CCEvent* event)
{
	return true;
}

void Parallax2::ccTouchEnded(CCTouch* touch, CCEvent* event)
{
}

void Parallax2::ccTouchCancelled(CCTouch* touch, CCEvent* event)
{
}

void Parallax2::ccTouchMoved(CCTouch* touch, CCEvent* event)
{
	CCPoint touchLocation = touch->locationInView( touch->view() );	
	CCPoint prevLocation = touch->previousLocationInView( touch->view() );	

	touchLocation = CCDirector::sharedDirector()->convertToGL( touchLocation );
	prevLocation = CCDirector::sharedDirector()->convertToGL( prevLocation );

	CCPoint diff = ccpSub(touchLocation,prevLocation);
	
	CCNode* node = getChildByTag(kTagNode);
	CCPoint currentPos = node->getPosition();
	node->setPosition( ccpAdd(currentPos, diff) );
}

14. 反锯齿
child->getTexture()->setAntiAliasTexParameters();

15. Accelerometer
setIsAccelerometerEnabled(true);

void AccelerometerTest::didAccelerate(CCAcceleration* pAccelerationValue)
{

}

16. 












西蒙iphone-OpenGL ES 学习

1. 清除屏幕
glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

2. 画三角
const GLfloat triangleVertices[] = 
{
	 50.0,   50.0,  -6.0,                    // Triangle top centre
	100.0,   50.0,  -6.0,                    // bottom left
	 75.0,  100.0,  -6.0                     // bottom right
};

glDisable(GL_TEXTURE_2D);
glDisableClientState(GL_TEXTURE_COORD_ARRAY);
glDisableClientState(GL_COLOR_ARRAY);

glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

glVertexPointer(3, GL_FLOAT, 0, triangleVertices);
glEnableClientState(GL_VERTEX_ARRAY);
glDrawArrays(GL_TRIANGLES, 0, 3);


// restore default state
glEnableClientState(GL_COLOR_ARRAY);
glEnableClientState(GL_TEXTURE_COORD_ARRAY);
glEnable(GL_TEXTURE_2D);

3. 画矩形
const GLfloat squareVertices[] = 
{
	 0.0, 50.0,  -6.0,            // Top left
	 0.0,  0.0,  -6.0,            // Bottom left
	50.0,  0.0,  -6.0,            // Bottom right
	50.0, 50.0,  -6.0             // Top right
};

glVertexPointer(3, GL_FLOAT, 0, squareVertices);
glEnableClientState(GL_VERTEX_ARRAY);
glDrawArrays(GL_TRIANGLE_FAN, 0, 4);

4. glLoadIdentity()
只是一个覆盖（重置）函数，它只是基本重置所有的条件（重置所有状态）

5. 多重颜色
const GLfloat squareVertices[] = 
{
	0.0,  50.0,   0.0,            // Top left
	0.0,   0.0,   0.0,            // Bottom left
	50.0,  0.0,   0.0,            // Bottom right
	50.0, 50.0,   0.0             // Top right
};

const GLfloat squareColours[] = 
{
	1.0, 0.0, 0.0, 1.0,   // Red - top left - colour for squareVertices[0]
	0.0, 1.0, 0.0, 1.0,   // Green - bottom left - squareVertices[1]
	0.0, 0.0, 1.0, 1.0,   // Blue - bottom right - squareVerticies[2]
	0.5, 0.5, 0.5, 1.0    // Grey - top right- squareVerticies[3]
};


//glLoadIdentity();
//glTranslatef(1.5, 0.0, -6.0);
//glRotatef(0, 0.0, 0.0, -1.0);
glVertexPointer(3, GL_FLOAT, 0, squareVertices);
glEnableClientState(GL_VERTEX_ARRAY);
glColorPointer(4, GL_FLOAT, 0, squareColours);      // NEW
glEnableClientState(GL_COLOR_ARRAY);                // NEW
glDrawArrays(GL_TRIANGLE_FAN, 0, 4);
glDisableClientState(GL_COLOR_ARRAY);               // NEW










